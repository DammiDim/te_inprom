from telebot import types
import pandas as pd

from data.config import DATABASE_NAME
from data.loader import bot
from data.texts import t_welcome
from database.sql_db import SqlDB
from keyboard.replay.reply_button import welcome_btn
from utils.mailing import start_mailing

_msg_ids = []
_msg_start_id = 0


@bot.message_handler(is_admin=True, commands=['start'])
def welcome(message):
    bot.clear_reply_handlers(message)
    markup = welcome_btn()

    markup.add(
        types.KeyboardButton('‚ùó –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤—Å–µ–º ‚ùó'),
        types.KeyboardButton('‚ùó –í—ã–≥—Ä—É–∑–∏—Ç—å –±–∞–∑—É ‚ùó'),
    )

    bot.send_message(message.chat.id, t_welcome, reply_markup=markup)


@bot.message_handler(
    func=lambda message: message.text in [
        '‚ùó –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤—Å–µ–º ‚ùó',
        '–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ üü¢',
        '–ù–µ—Ç, –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–≤—ã–µ üî¥'],
    is_admin=True)
def message_everyone(message):
    global _msg_start_id
    chat_id = message.chat.id
    message_id = message.id
    _markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    _markup.add(
        types.KeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üü°'),
        types.KeyboardButton('–ì–æ—Ç–æ–≤–æ üü¢'))
    _text = '‚ùó <b><i>–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏ –∏ –Ω–∞–∂–º–∏—Ç–µ "–ì–æ—Ç–æ–≤–æ"</i></b>'

    _msg_start_id = message_id + 2

    bot.delete_message(chat_id, message_id)
    bot.send_message(chat_id, _text, reply_markup=_markup, parse_mode='html')


@bot.message_handler(is_admin=True, func=lambda message: message.text == '–ì–æ—Ç–æ–≤–æ üü¢')
def message_everyone(message):
    global _msg_ids, _msg_start_id
    _msg_ids = [i for i in range(_msg_start_id, message.id)]
    _markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
    _text = ''

    if not _msg_ids:
        _markup.add(
            types.KeyboardButton(text='–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üü°'),
            types.KeyboardButton(text='–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ üü¢'),
        )
        _text = ('‚ùó <b><i>–í–æ–∑–Ω–∏–∫–ª–∞ –ø—Ä–æ–±–ª–µ–º–∞ —Å –æ—Ç–ø—Ä–∞–≤–∫–æ–π –≤–∞—à–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, '
                 '–ø—Ä–æ–≤–µ—Ä—å—Ç–µ, –≤—Å—ë –ª–∏ –∑–∞–ø–æ–ª–Ω–µ–Ω–æ –≤–µ—Ä–Ω–æ, –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑.</i></b>')
    else:
        _markup.add(
            types.KeyboardButton(text='–î–∞, –≤—Å–µ –≤–µ—Ä–Ω–æ üü¢'),
            types.KeyboardButton(text='–ù–µ—Ç, –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–≤—ã–µ üî¥'),
        )
        _markup.add(types.KeyboardButton(text='–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üü°'), )
        _text = '‚ùó <b><i>–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∏ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –æ—Ç–ø—Ä–∞–≤–∫—É.</i></b>'

    bot.send_message(message.chat.id, _text, reply_markup=_markup, parse_mode='html')


@bot.message_handler(is_admin=True, func=lambda message: message.text == '–î–∞, –≤—Å–µ –≤–µ—Ä–Ω–æ üü¢')
def dispatch_msg(message):
    global _msg_ids
    _chat_id = message.chat.id
    _message_id = message.message_id
    _markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    _markup.add(types.KeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üü°'))

    bot.send_message(chat_id=_chat_id,
                     text='<b><i>–°–æ–æ–±—â–µ–Ω–∏–µ –±—ã–ª–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ</i></b> ‚úÖ',
                     reply_markup=_markup,
                     parse_mode='html')

    start_mailing(_chat_id, _msg_ids)


@bot.message_handler(is_admin=True, func=lambda message: message.text in ['–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üü°'])
def back_mainmenu(message):
    global _msg_ids, _msg_start_id
    _msg_ids = []
    _msg_start_id = 0

    chat_id = message.chat.id
    message_id = message.id

    markup = welcome_btn()
    markup.add(
        types.KeyboardButton('‚ùó –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤—Å–µ–º ‚ùó'),
        types.KeyboardButton('‚ùó –í—ã–≥—Ä—É–∑–∏—Ç—å –±–∞–∑—É ‚ùó'),
    )

    bot.delete_message(chat_id, message_id)
    bot.send_message(chat_id, '–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –º–µ–Ω—é', reply_markup=markup)


@bot.message_handler(is_admin=True, func=lambda message: message.text == '‚ùó –í—ã–≥—Ä—É–∑–∏—Ç—å –±–∞–∑—É ‚ùó')
def cmd_export(message):
    _sqlDB = SqlDB(f"{DATABASE_NAME}")
    _data = _sqlDB.select("SELECT telegram_id, username, status FROM users")
    _df = pd.DataFrame(_data)
    _df.to_excel('database/output.xlsx', index=True, header=True)
    _file = open('database/output.xlsx', 'rb')
    bot.send_document(message.chat.id, document=_file)
